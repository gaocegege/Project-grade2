<?xml version='1.0' encoding='UTF-8'?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="  
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd  
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd  
       ">

	<!-- <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
		<property name="locations"> <list> <value>classpath:jdbc.properties</value> 
		</list> </property> </bean> -->

	<!-- 建立数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<!-- 数据库驱动，我这里使用的是Mysql数据库 -->
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<!-- 数据库地址，这里也要注意一下编码，不然乱码可是很郁闷的哦！ -->
		<property name="url">
			<value>jdbc:mysql://localhost:3306/my_db_androidserver?useUnicode=true&amp;characterEncoding=UTF-8</value>
		</property>
		<!--dialect,每个数据库对应的Dialet匹配其平台特性 -->
		<!-- <property name="dialect"> <value>org.hibernate.dialect.MySQLDialect</value> 
			</property> -->
		<!-- 数据库的用户名 -->
		<property name="username">
			<value>root</value>
		</property>
		<!-- 数据库的密码 -->
		<property name="password">
			<value></value>
		</property>
	</bean>
	<!-- 把数据源注入给Session工厂 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<!-- 配置映射文件 -->
		<property name="mappingResources">
			<list>
				<value>Domain/KeyWord.hbm.xml</value>
				<value>Domain/Location.hbm.xml</value>
				<value>Domain/NewsContent.hbm.xml</value>
				<value>Domain/Content.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQL5Dialect
				</prop>
				<prop key="hibernate.show_sql">false</prop>
				<!-- <prop key="hibernate.show_sql">true</prop> -->
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.current_session_context_class">
					org.springframework.orm.hibernate4.SpringSessionContext

				</prop>
				<prop key="hibernate.search.lucene_version">LUCENE_36</prop>
				<prop key="hibernate.search.default.directory_provider">
					org.hibernate.search.store.impl.FSDirectoryProvider
				</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="merge*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="put*" propagation="REQUIRED" />
			<tx:method name="use*" propagation="REQUIRED" />
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="count*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="list*" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" read-only="false" />
		</tx:attributes>
	</tx:advice>

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<constructor-arg>
			<ref local="sessionFactory" />
		</constructor-arg>
	</bean>

	<bean id="keyWordDAO" class="DAO.KeyWordDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="contentDAO" class="DAO.ContentDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="newsContentDAO" class="DAO.NewsContentDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	<bean id="locationDAO" class="DAO.LocationDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	<bean id="locationService" class="Service.DBService.LocationService">
		<property name="locationDAO" ref="locationDAO" />
	</bean>
	
	<bean id="contentService" class="Service.DBService.ContentService">
		<property name="contentDAO" ref="contentDAO" />
	</bean>

	<bean id="newsContentService" class="Service.DBService.NewsContentService">
		<property name="newsContentDAO" ref="newsContentDAO" />
	</bean>

	<bean id="keyWordService" class="Service.DBService.KeyWordService">
		<property name="keyWordDAO" ref="keyWordDAO" />
	</bean>
	
	<bean id="keyWordServiceOld" class="Service.KeyWordServiceOld">
	</bean>

	<bean id="spiderService" class="Service.SpiderService">
	</bean>
	
	<bean id="splitService" class="Service.SplitService">
	</bean>
	
	<bean id="chooseService" class="Service.ChooseService">
	</bean>
	
	<bean id="summaryService" class="Service.SummaryService">
	</bean>
	
	<bean id="baiduMapService" class="Service.BaiduServices.BaiduMapService">
	</bean>
	
	<bean id="similarityService" class="Service.SimilarityServices.SimilarityService" scope="prototype">
	</bean>
	
	<bean id="getLocation" class="Service.GetLocation">
		<property name="splitService" ref="splitService" />
		<property name="baiduMapService" ref="baiduMapService" />
	</bean>

	<bean id="htmlService" class="Service.HtmlService">
		<property name="contentService" ref="contentService" />
		<property name="keyWordService" ref="keyWordService" />
		<property name="baiduMapService" ref="baiduMapService" />
		<property name="getLocation" ref="getLocation" />
		<property name="locationService" ref="locationService" />
	</bean>

	<bean id="TestAction" class="Action.Test" scope="prototype">
		<property name="contentService" ref="contentService" />
		<property name="spiderService" ref="spiderService" />
	</bean>

	<bean id="spiderAction" class="Action.Spider" scope="prototype">
		<property name="htmlService" ref="htmlService" />
	</bean>

	<bean id="getListAction" class="Action.GetList" scope="prototype">
		<property name="contentService" ref="contentService" />
	</bean>
	
	<bean id="getSumAction" class="Action.GetSum" scope="prototype">
		<property name="contentService" ref="contentService" />
		<property name="keyWordServiceOld" ref="keyWordServiceOld" />
		<property name="summaryService" ref="summaryService" />
	</bean>

	<bean id="searchFormat" class="Service.SearchFormat" scope="prototype">
	</bean>

	<bean id="formatSearchURL" class="Service.FormatSearchURL" scope="prototype">
		<property name="searchFormat" ref="searchFormat" />
		<property name="contentDAO" ref="contentDAO" />
	</bean>

	<bean id="getSearchPage" class="Action.GetSearchPage" scope="prototype">
		<property name="formatSearchURL" ref="formatSearchURL" />
	</bean>

	<bean id="baiduService" class="Service.BaiduServices.BaiduService" scope="prototype">
		<property name="contentDAO" ref="contentDAO" />
	</bean>

	<bean id="getBaiduList" class="Action.GetBaiduList" scope="prototype">
		<property name="baiduService" ref="baiduService" />
		<property name="similarityService" ref="similarityService"/>
		<property name="contentService" ref="contentService" />
	</bean>

	<bean id="getNewsContent" class="Action.GetNewsContent" scope="prototype">
		<property name="newsContentService" ref="newsContentService" />
	</bean>
	<bean id="getSecondaryList" class="Action.GetSecondaryList" scope="prototype">
		<property name="baiduService" ref="baiduService" />
		<property name="searchFormat" ref="searchFormat" />
	</bean>
	<bean id="getSimilarNews" class="Action.GetSimilarNews" scope="prototype">
		<property name="baiduService" ref="baiduService" />
		<property name="contentService" ref="contentService" />
		<property name="splitService" ref="splitService" />
		<property name="chooseService" ref="chooseService" />
	</bean>
	<bean id="getSimilarNews2" class="Action.GetSimilarNews2" scope="prototype">
		<property name="baiduService" ref="baiduService" />
		<property name="splitService" ref="splitService" />
		<property name="chooseService" ref="chooseService" />
	</bean>
	<bean id="getLocationAction" class="Action.GetLocationAction" scope="prototype">
		<property name="locationService" ref="locationService" />
		<property name="contentService" ref="contentService" />
	</bean>
	<bean id="getPro" class="Action.GetPro" scope="prototype">
		<property name="locationService" ref="locationService" />
	</bean>
	<bean id="getLocByPro" class="Action.GetLocByPro" scope="prototype">
		<property name="locationService" ref="locationService" />
	</bean>
	<bean id="getNews" class="Action.GetNews" scope="prototype">
		<property name="contentService" ref="contentService" />
	</bean>
	<bean id="getBaiduSum" class="Action.GetBaiduSum" scope="prototype">
		<property name="baiduService" ref="baiduService" />
	</bean>
	
	<!-- 把Session工厂注入给hibernateTemplate -->
	<!-- <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate"> 
		<constructor-arg> <ref local="sessionFactory" /> </constructor-arg> </bean> -->
	<!-- 把DAO注入给Session工厂 -->
	<!-- <bean id="userDAO" class="dao.imp.UserDAO"> <property name="sessionFactory"> 
		<ref bean="sessionFactory" /> </property> </bean> <bean id="bookDAO" class="dao.imp.BookDAO"> 
		<property name="sessionFactory"> <ref bean="sessionFactory" /> </property> 
		</bean> <bean id="ordersDAO" class="dao.imp.OrdersDAO"> <property name="sessionFactory"> 
		<ref bean="sessionFactory" /> </property> </bean> <bean id="orderItemDAO" 
		class="dao.imp.OrderItemDAO"> <property name="sessionFactory"> <ref bean="sessionFactory" 
		/> </property> </bean> <bean id="userService" class="service.imp.UserService"> 
		<property name="userDAO" ref="userDAO" /> </bean> <bean id="bookService" 
		class="service.imp.BookService"> <property name="bookDAO" ref="bookDAO" /> 
		</bean> <bean id="ordersService" class="service.imp.OrdersService"> <property 
		name="ordersDAO" ref="ordersDAO" /> </bean> <bean id="orderItemService" class="service.imp.OrderItemService"> 
		<property name="orderItemDAO" ref="orderItemDAO" /> </bean> <bean id="registerAction" 
		class="action.Register" scope="prototype"> <property name="userService" ref="userService"></property> 
		</bean> <bean id="bookShowAction" class="action.Books" scope="prototype"> 
		<property name="bookService" ref="bookService"/> </bean> <bean id="sbookShowAction" 
		class="action.StatisticBooks" scope="prototype"> <property name="bookService" 
		ref="bookService"/> </bean> <bean id="addBookAction" class="action.AddBook" 
		scope="prototype"> <property name="bookService" ref="bookService"/> </bean> 
		<bean id="addToBasketAction" class="action.AddToBasket" scope="prototype"> 
		</bean> <bean id="bargainAction" class="action.Bargain" scope="prototype"> 
		<property name="ordersService" ref="ordersService"/> <property name="bookService" 
		ref="bookService"/> <property name="userService" ref="userService"/> <property 
		name="orderItemService" ref="orderItemService"/> </bean> <bean id="changeInfoAction" 
		class="action.ChangeInfo" scope="prototype"> <property name="userService" 
		ref="userService"></property> </bean> <bean id="orderShowAction" class="action.ViewOrder" 
		scope="prototype"> <property name="ordersService" ref="ordersService"></property> 
		<property name="userService" ref="userService"></property> </bean> <bean 
		id="logoutAction" class="action.Logout" scope="prototype"> </bean> <bean 
		id="statisticAction" class="action.Statistic" scope="prototype"> <property 
		name="ordersService" ref="ordersService"/> <property name="bookService" ref="bookService"/> 
		</bean> <bean id="statisticUserAction" class="action.StatisticUsers" scope="prototype"> 
		<property name="ordersService" ref="ordersService"/> </bean> -->
</beans>